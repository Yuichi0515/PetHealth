<%= render 'partial/navbar' %>
<div class="container">
	<div class="row">
		<div class="col-md-6 col-md-offset-3">
			<div class="panel panel-default">
				<div class="panel-heading">
					<div class="text-center">
						<span style="font-size:24px;">投稿する</span>
					</div>
				</div>
			
				<div class="panel-body">			
					<!-- ここからフォーム -->
					<%= form_for @post do |f| %>
						<div class="row">
							<div class="col-md-12 select">
								<div class="form-group">
									<label>お家の種類</label>
									<%= f.select :description, [["一軒家","一軒家"], ["マンション","マンション"], ["アパート","アパート"]], {prompt:"選択してください"}, {required: 'true', autofocus: 'true', class: 'form-control'} %>
								</div>
							</div>
						</div>
						<br>
			            <div class="actions">
							<%= f.submit "Save", class: "btn btn-danger" %>
						</div>
					<% end %>
					<%= form_for @photo, html:{multipart: true,class:"dropzone", id:"my-dropzone" } do |f| %> 
		                <%= f.hidden_field :post_id, value: @post.id %>
		                <div class="dz-message needsclick">
		                    <h5>ファイルをここにドロップしてください。</h5>
		                    <strong>アップロードするにはここをクリックしてください</strong>
		                </div>
		                
		                <div class="fallback">
		                    <%= f.file_field :image %>
		                    <%= f.submit "Upload image" %>
		                </div>
		            <% end %>
		            <br>
				</div>
			</div>
		</div>
	</div>

</div>

<script type="text/javascript">
    $(function(){
        Dropzone.autoDiscover = false;
        // photos_contoroller.rbのcreateアクションが呼ばれる
        $("#my-dropzone").dropzone({
            maxFilesize: 200,// MB
            addRemoveLinks: true,// 削除リンクを全てのpreviewファイルにつける
            paramName: 'photo[image]',// パラメータの名前
            success: function(file, response) {
                // file.previewElementでpreview要素のhtmlにアクセスできる
                // add .dz-success class to file.previewElement
                $(file.previewElement).addClass('dz-success');
                // add response.uploadId to dz-remove class
                $(file.previewElement).find('.dz-remove').attr('id', response.photoId);

                var me = this;

                // meに"complete"イベントを定義
                me.on("complete", function(file) {
                    $(file.previewTemplate).find('.dz-remove').text("削除する");
                });
            },
            removedfile: function(file) {
                //削除選択されたfileのidを取得
                var id = $(file.previewTemplate).find('.dz-remove').attr('id');
                // call photos_contoroller.rb destroy action
                $.ajax({
                    type: 'DELETE',
                    url: "/photos/" +id,
                    success: function(data) {
                        console.log(data.message);
                    }
                });
                var previewElement;
                // 条件式 ? 式１ : 式２　条件式の値がtrue=>式１、false=>式２を返す
                // parentNode => 親ノード（１つ上のhtml要素）を取得
                // (void 0) => 何も処理しない
                // リスト（親ノード）から、プレビュー要素を消すという記述
                return (previewElement = file.previewElement) != null ? (previewElement.parentNode.removeChild(file.previewElement)) : (void 0);
            }

            // init executed at first when Page loaded
            // init: function(){
            //     // this equal dropzone
            //     var me = this;

            //     // meに"complete"イベントを定義
            //     me.on("complete", function(file) {
            //         $(file.previewTemplate).find('.dz-remove').text("削除する");
            //     });
            //     // call list function in photos_contoroller.rb with get method
            //     $.ajax({
            //         type: "GET",
            //         url: "/photos/posting",
            //         data: {'post_id': <%= @post.id%>},
            //             dataType: 'json',
            //         success: function(data) {
            //             $.each(data.images, function(key, value) {
            //                 if(data.images != undefined && data.images.length > 0){
            //                     me.emit("addedfile", value);// addedfileイベントをvalueのデータで実行する
            //                     me.emit("thumbnail", value, value.src);// thumbnailイベントをvalueのデータで実行する
            //                     me.emit("complete", value); // completeイベントをvalueのデータで実行する
            //                     $(value._removeLink).attr("id", value.id); // valueの_removeLinkのidにvalue.idを追加
            //                 }
            //             });
            //         }
            //     });
            // }
        });
    });
</script>
